SQL> @FullLoad.sql
SQL> -- Script Oracle SQL*plus de creation du schema travail pratique 1 - Modélisation et Conception d'une BD
SQL> -- Version sans accents
SQL> -- Enlever les tables existantes
SQL> -- Creation des tables
SQL> SET ECHO ON
SQL> DROP TABLE tp1Client CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1DemandeSoumission CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1SoumissionE CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Chargement CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Route CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Carburant CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Compagnie CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Camion CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1TypeEquipement CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Equipement CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Position CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> DROP TABLE tp1Tracteur CASCADE CONSTRAINTS
  2  /

Table dropped.

SQL> CREATE TABLE tp1Client
  2  (pClient		     INTEGER		     NOT NULL,
  3   cClient		     VARCHAR(20)     NOT NULL,
  4   CHECK	(cClient IN ('VISA','Master Card','American Express')),
  5   PRIMARY KEY    (pClient)
  6  )
  7  /

Table created.

SQL> CREATE TABLE tp1Compagnie
  2  (pCompagnie	     INTEGER		     NOT NULL,
  3   cCompagnie	     VARCHAR(20)     NOT NULL,
  4   nCamion	     INTEGER		     NOT NULL,
  5   nProfit	   NUMBER      NOT NULL,
  6   CHECK (nCamion>=1),
  7   PRIMARY KEY    (pCompagnie)
  8  )
  9  /

Table created.

SQL> CREATE TABLE tp1TypeEquipement
  2  (pTypeEquipement INTEGER NOT NULL,
  3   cTypeEquipement VARCHAR(30) NOT NULL,
  4   nCout NUMBER(8,5) NOT NULL,
  5   CHECK	      (cTypeEquipement IN ( 'DryBox','Flatbed')),
  6   PRIMARY KEY    (pTypeEquipement)
  7  )
  8  /

Table created.

SQL> CREATE TABLE tp1Equipement
  2  (pEquipement INTEGER NOT NULL,
  3   cEquipement VARCHAR(30) NOT NULL,
  4   nCapacite NUMBER NOT NULL,
  5   nLongueur NUMBER NOT NULL,
  6   nLargeur NUMBER NOT NULL,
  7   nHauteur NUMBER NOT NULL,
  8   pTypeEquipement INTEGER NOT NULL,
  9   PRIMARY KEY    (pTypeEquipement),
 10   FOREIGN KEY    (pTypeEquipement) REFERENCES tp1TypeEquipement
 11  )
 12  /

Table created.

SQL> CREATE TABLE tp1Carburant
  2  (pCarburant INTEGER NOT NULL,
  3   cCarburant VARCHAR(30) NOT NULL,
  4   nCout NUMBER(8,5) NOT NULL,
  5   PRIMARY KEY    (pCarburant)
  6  )
  7  /

Table created.

SQL> CREATE TABLE tp1Tracteur
  2  (pTracteur INTEGER NOT NULL,
  3   cTracteur VARCHAR(30) NOT NULL,
  4   nConsommation FLOAT(8) NOT NULL,
  5   bActif	    INTEGER NOT NULL,
  6   pCarburant    INTEGER NOT NULL,
  7   PRIMARY KEY    (pTracteur),
  8   FOREIGN KEY    (pCarburant) REFERENCES tp1Carburant
  9  )
 10  /

Table created.

SQL> CREATE TABLE tp1Camion
  2  (pCamion		     INTEGER		     NOT NULL,
  3   pCompagnie	     INTEGER		     NOT NULL,
  4   pEquipement	     INTEGER		     NOT NULL,
  5   pTracteur 	     INTEGER		     NOT NULL,
  6   cCamion	   VARCHAR(20)	     NOT NULL,
  7   PRIMARY KEY    (pCamion),
  8   FOREIGN KEY    (pCompagnie) REFERENCES tp1Compagnie,
  9   FOREIGN KEY    (pEquipement) REFERENCES tp1Equipement,
 10   FOREIGN KEY    (pTracteur) REFERENCES tp1Tracteur
 11  )
 12  /

Table created.

SQL> CREATE TABLE tp1DemandeSoumission
  2  (pSoumission	     INTEGER		     NOT NULL,
  3   nPrix	     NUMBER(8,5)	     NOT NULL,
  4   pCamion		     INTEGER		     NOT NULL,
  5   dateSoumission	     DATE    NOT NULL,
  6   PRIMARY KEY    (pSoumission),
  7   FOREIGN KEY    (pCamion) REFERENCES tp1Camion
  8  )
  9  /

Table created.

SQL> CREATE TABLE tp1Route
  2  (pRoute		     INTEGER	     NOT NULL,
  3   cRoute		     VARCHAR(40)     NOT NULL,
  4   nLatOri	     NUMBER  NOT NULL,
  5   nLongOri	     NUMBER  NOT NULL,
  6   nLatDes		     NUMBER	     NOT NULL,
  7   nLongDes		     NUMBER	     NOT NULL,
  8   nDistance 	     NUMBER	     NOT NULL,
  9   pSoumission	     INTEGER		     NOT NULL,
 10   FOREIGN KEY    (pSoumission) REFERENCES tp1DemandeSoumission,
 11   PRIMARY KEY    (pRoute)
 12  )
 13  /

Table created.

SQL> CREATE TABLE tp1Chargement
  2  (pChargement	     INTEGER	     NOT NULL,
  3   cChargement	     VARCHAR(40)     NOT NULL,
  4   refrigerated	     INTEGER NOT NULL,
  5   dock	     INTEGER	     NOT NULL,
  6   hazardous      INTEGER	     NOT NULL,
  7   rush	     INTEGER		     NOT NULL,
  8   nLongueur 	     NUMBER	     NOT NULL,
  9   nLargeur		     NUMBER	     NOT NULL,
 10   nHauteur		     NUMBER	     NOT NULL,
 11   nPoids		     NUMBER	     NOT NULL,
 12   quantity	     INTEGER	     NOT NULL,
 13   hours  FLOAT   NOT NULL,
 14   valeur	     INTEGER	     NOT NULL,
 15   pSoumission	     INTEGER		     NOT NULL,
 16   pClient	    INTEGER	     NOT NULL,
 17   PRIMARY KEY    (pChargement),
 18   FOREIGN KEY    (pClient) REFERENCES tp1Client,
 19   FOREIGN KEY    (pSoumission) REFERENCES tp1DemandeSoumission
 20  )
 21  /

Table created.

SQL> CREATE TABLE tp1SoumissionE
  2  (pSoumissionE	     INTEGER		     NOT NULL,
  3   pChargement   INTEGER	     NOT NULL,
  4   dSoumission   DATE	     NOT NULL,
  5   PRIMARY KEY    (pSoumissionE),
  6   FOREIGN KEY    (pChargement) REFERENCES tp1Chargement
  7  )
  8  /

Table created.

SQL> CREATE TABLE tp1Position
  2  (pPosition INTEGER NOT NULL,
  3   cPosition VARCHAR(30) NOT NULL,
  4   nLat NUMBER NOT NULL,
  5   nLong NUMBER NOT NULL,
  6   bDisponible INTEGER NOT NULL,
  7   pCamion		     INTEGER		     NOT NULL,
  8   PRIMARY KEY    (pPosition),
  9   FOREIGN KEY    (pCamion) REFERENCES tp1Camion
 10  )
 11  /

Table created.

SQL> SET ECHO ON
SQL> -- Script Oracle SQL*plus de sequence pour le travail pratique 2 - Modélisation et Conception d'une BD
SQL> -- Version sans accents
SQL> -- INSERTION dans les tables
SQL> SET ECHO ON
SQL> DROP SEQUENCE tp2Client
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2DemandeSoumission
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2SoumissionE
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Chargement
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Route
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Carburant
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Compagnie
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Camion
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2TypeEquipement
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Equipement
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Position
  2  /

Sequence dropped.

SQL> DROP SEQUENCE tp2Tracteur
  2  /

Sequence dropped.

SQL> CREATE SEQUENCE tp2Client
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 100
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2DemandeSoumission
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 100
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2SoumissionE
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 100
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Chargement
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 200
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Route
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 50
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Carburant
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 12
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Compagnie
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 50
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Camion
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 80
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2TypeEquipement
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 80
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Equipement
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 80
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Position
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 80
  6  
SQL> 
SQL> /

Sequence created.

SQL> CREATE SEQUENCE tp2Tracteur
  2   start with 10
  3   increment by 2
  4   minvalue 10
  5   maxvalue 80
  6  
SQL> 
SQL> /

Sequence created.

SQL> SET ECHO ON
SQL> -- Script Oracle SQL*plus de procedure. pour le travail pratique 2 - Modélisation et Conception d'une BD
SQL> -- Version sans accents
SQL> SET ECHO ON
SQL> CREATE OR REPLACE FUNCTION calculDistance (LatOri IN NUMBER,
  2  					  LonOri IN NUMBER,
  3  					  LatDest IN NUMBER,
  4  					  LonDest IN NUMBER,
  5  					  Radius IN NUMBER DEFAULT 3963) RETURN NUMBER IS
  6  
  7   DegToRad NUMBER := 57.29577951;
  8  
  9  BEGIN
 10    RETURN(NVL(Radius,0) * ACOS((sin(NVL(LatOri,0) / DegToRad) * SIN(NVL(LatDest,0) / DegToRad)) +
 11  	     (COS(NVL(LatOri,0) / DegToRad) * COS(NVL(LatDest,0) / DegToRad) *
 12  	      COS(NVL(LonDest,0) / DegToRad - NVL(LonOri,0)/ DegToRad))));
 13  END;
 14  /

Function created.

SQL> CREATE OR REPLACE PROCEDURE ConsulterSoumissions
  2  (noClient tp1Chargement.pClient%TYPE) IS
  3  laRoute tp1Chargement.cChargement%TYPE;
  4  laSoumission tp1Chargement.pSoumission%TYPE;
  5  lePrix tp1DemandeSoumission.nPrix%TYPE;
  6  CURSOR lignesDétail
  7  (unClient tp1Chargement.pClient%TYPE)IS
  8  SELECT * FROM
  9  (SELECT  tp1Chargement.cChargement, tp1Chargement.pSoumission, tp1DemandeSoumission.nPrix
 10  FROM tp1Chargement JOIN  tp1DemandeSoumission
 11  ON tp1Chargement.pSoumission = tp1DemandeSoumission.pSoumission
 12  JOIN tp1Client
 13  ON tp1Chargement.pClient = tp1Client.pClient
 14  WHERE tp1Chargement.pClient = unClient
 15  )
 16  WHERE noClient = unClient;
 17  BEGIN
 18  DBMS_OUTPUT.PUT('Votre Client #:');
 19  DBMS_OUTPUT.PUT_LINE(noClient);
 20  OPEN lignesDétail(noClient);
 21  LOOP
 22  FETCH lignesDétail INTO laRoute, laSoumission, lePrix;
 23  EXIT WHEN lignesDétail%NOTFOUND;
 24  DBMS_OUTPUT.PUT('La route : ');
 25  DBMS_OUTPUT.PUT(laRoute);
 26  DBMS_OUTPUT.PUT(' et ');
 27  DBMS_OUTPUT.PUT('Votre soumission #: ');
 28  DBMS_OUTPUT.PUT_LINE(laSoumission);
 29  DBMS_OUTPUT.PUT('Prix a payer $: ');
 30  DBMS_OUTPUT.PUT_LINE(lePrix);
 31  END LOOP;
 32  CLOSE lignesDétail ;
 33  EXCEPTION
 34  WHEN OTHERS THEN
 35  RAISE_APPLICATION_ERROR(-20003,'erreur interne');
 36  END ConsulterSoumissions;
 37  /

Procedure created.

SQL> CREATE OR REPLACE PROCEDURE ProduireFacture
  2  (noClient tp1Chargement.pClient%TYPE) IS
  3  laSoumission tp1Chargement.pSoumission%TYPE;
  4  lePrix tp1DemandeSoumission.nPrix%TYPE;
  5  laPayment tp1Client.cClient%TYPE;
  6  CURSOR lignesDétail
  7  (unClient tp1Chargement.pClient%TYPE)IS
  8  SELECT * FROM
  9  (SELECT  tp1Chargement.pSoumission, tp1DemandeSoumission.nPrix, tp1Client.cClient
 10  FROM tp1Chargement JOIN  tp1DemandeSoumission
 11  ON tp1Chargement.pSoumission = tp1DemandeSoumission.pSoumission
 12  JOIN tp1Client
 13  ON tp1Chargement.pClient = tp1Client.pClient
 14  WHERE tp1Chargement.pClient = unClient
 15  )
 16  WHERE noClient = unClient;
 17  BEGIN
 18  DBMS_OUTPUT.PUT('Votre Client #:');
 19  DBMS_OUTPUT.PUT_LINE(noClient);
 20  OPEN lignesDétail(noClient);
 21  LOOP
 22  FETCH lignesDétail INTO laSoumission, lePrix, laPayment;
 23  EXIT WHEN lignesDétail%NOTFOUND;
 24  DBMS_OUTPUT.PUT('Votre soumission #: ');
 25  DBMS_OUTPUT.PUT_LINE(laSoumission);
 26  DBMS_OUTPUT.PUT('Votre cout $: ');
 27  DBMS_OUTPUT.PUT_LINE(lePrix);
 28  DBMS_OUTPUT.PUT('Votre mode de payment: ');
 29  DBMS_OUTPUT.PUT_LINE(laPayment);
 30  END LOOP;
 31  CLOSE lignesDétail ;
 32  EXCEPTION
 33  WHEN OTHERS THEN
 34  RAISE_APPLICATION_ERROR(-20004,'erreur interne');
 35  END ProduireFacture;
 36  /

Procedure created.

SQL> CREATE OR REPLACE FUNCTION CoutTotalDuTrajet
  2  (uneSoumission tp1DemandeSoumission.pSoumission%TYPE,
  3  sourceOriLat tp1Route.nLatOri%TYPE,
  4  sourceOriLong tp1Route.nLongOri%TYPE,
  5  sourceDestLat tp1Route.nLatDes%TYPE,
  6  sourceDestLong tp1Route.nLongDes%TYPE) RETURN NUMBER
  7  IS
  8   prix INTEGER;
  9   rnDistance tp1Route.nDistance%TYPE;
 10   BEGIN
 11   SELECT calculDistance (sourceOriLat,sourceOriLong,sourceDestLat,sourceDestLong) INTO rnDistance FROM DUAL;
 12   prix := rnDistance * 1.5;
 13   prix := prix * 1.18;
 14   RETURN prix;
 15  END;
 16  /

Function created.

SQL> CREATE OR REPLACE FUNCTION TotalFacture
  2  (uneSoumission tp1DemandeSoumission.pSoumission%TYPE) RETURN NUMBER
  3  IS
  4   prix INTEGER;
  5   rnDistance tp1Route.nDistance%TYPE;
  6   rnConsommation tp1Tracteur.nConsommation%TYPE;
  7   CarburantnCout tp1Carburant.nCout%TYPE;
  8   TypeEnCout  tp1TypeEquipement.nCout%TYPE;
  9   rnProfit tp1Compagnie.nProfit%TYPE;
 10   BEGIN
 11  
 12   SELECT tp1TypeEquipement.nCout INTO TypeEnCout
 13  	 FROM tp1DemandeSoumission JOIN tp1Camion
 14  	 ON tp1DemandeSoumission.pCamion = tp1Camion.pCamion
 15  	 JOIN tp1Equipement
 16  	 ON tp1Camion.pEquipement = tp1Equipement.pEquipement
 17  	 JOIN tp1TypeEquipement
 18  	 ON tp1Equipement.pTypeEquipement = tp1TypeEquipement.pTypeEquipement
 19  	 WHERE tp1DemandeSoumission.pSoumission = uneSoumission;
 20  
 21    SELECT tp1Route.nDistance INTO rnDistance
 22  	 FROM tp1DemandeSoumission JOIN tp1Route
 23  	 ON tp1DemandeSoumission.pSoumission = tp1Route.pSoumission
 24  	 WHERE tp1DemandeSoumission.pSoumission = uneSoumission;
 25  
 26  	SELECT tp1Tracteur.nConsommation INTO rnConsommation
 27  	 FROM tp1DemandeSoumission JOIN tp1Camion
 28  	 ON tp1DemandeSoumission.pCamion = tp1Camion.pCamion
 29  	 JOIN tp1Tracteur
 30  	 ON tp1Camion.pTracteur = tp1Tracteur.pTracteur
 31  	 WHERE tp1DemandeSoumission.pSoumission = uneSoumission;
 32  
 33    SELECT tp1Carburant.nCout INTO CarburantnCout
 34  	 FROM tp1DemandeSoumission JOIN tp1Camion
 35  	 ON tp1DemandeSoumission.pCamion = tp1Camion.pCamion
 36  	 JOIN tp1Tracteur
 37  	 ON tp1Camion.pTracteur = tp1Tracteur.pTracteur
 38  	     JOIN tp1Carburant
 39  	     ON tp1Tracteur.pCarburant = tp1Carburant.pCarburant
 40  	 WHERE tp1DemandeSoumission.pSoumission = uneSoumission;
 41  
 42    SELECT tp1Compagnie.nProfit INTO rnProfit
 43  	 FROM tp1DemandeSoumission JOIN tp1Camion
 44  	 ON tp1DemandeSoumission.pCamion = tp1Camion.pCamion
 45  	     JOIN tp1Compagnie
 46  	     ON tp1Camion.pCompagnie = tp1Compagnie.pCompagnie
 47  	 WHERE tp1DemandeSoumission.pSoumission = uneSoumission;
 48  
 49   prix := (rnConsommation * rnDistance * CarburantnCout) + (TypeEnCout * rnDistance) * rnProfit;
 50   RETURN prix;
 51  END;
 52  /

Function created.

SQL> CREATE OR REPLACE FUNCTION PlusLongTrajet
  2  (uneDate tp1DemandeSoumission.dateSoumission%TYPE) RETURN VARCHAR2
  3  IS
  4   rnDistance tp1Route.nDistance%TYPE;
  5   rnCamion tp1DemandeSoumission.pCamion%TYPE;
  6   BEGIN
  7  
  8  SELECT tp1Route.nDistance, tp1DemandeSoumission.pCamion INTO rnDistance , rnCamion
  9  FROM tp1DemandeSoumission JOIN tp1Route
 10  ON tp1DemandeSoumission.pSoumission = tp1Route.pSoumission
 11  WHERE tp1DemandeSoumission.dateSoumission = uneDate and ROWNUM = 1
 12  ORDER BY nDistance desc;
 13  
 14   RETURN ' La distance: ' || rnDistance || ' et le camion: ' || rnCamion;
 15  END;
 16  /

Function created.

SQL> SET ECHO ON
SQL> -- Script Oracle SQL*plus de creation des gachettes travail pratique 1 - Modélisation et Conception d'une BD
SQL> -- Version sans accents
SQL> SET ECHO ON
SQL> CREATE OR REPLACE TRIGGER tp2GachetteClients
  2  BEFORE INSERT ON tp1Client
  3  FOR EACH ROW
  4    WHEN (new.pClient = 0)
  5  BEGIN
  6    :new.pClient := tp2Client.nextval;
  7  END;
  8  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteDemandeSoumission
  2  BEFORE INSERT ON tp1DemandeSoumission
  3  FOR EACH ROW
  4    WHEN (new.pSoumission = 0 AND new.pCamion = 0)
  5  DECLARE
  6    rpCamion  tp1DemandeSoumission.pCamion%TYPE;
  7  BEGIN
  8    :new.pSoumission := tp2DemandeSoumission.nextval;
  9    SELECT * INTO rpCamion FROM
 10  (
 11  SELECT pCamion FROM tp1Camion
 12  ORDER BY dbms_random.value
 13  )
 14  WHERE rownum = 1;
 15  
 16    :new.pCamion := rpCamion;
 17  END;
 18  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteChargement
  2  BEFORE INSERT ON tp1Chargement
  3  FOR EACH ROW
  4    WHEN (new.pChargement = 0 AND new.pSoumission = 0 AND new.pClient = 0)
  5  DECLARE
  6    rpClient  tp1Chargement.pClient%TYPE;
  7  BEGIN
  8    :new.pChargement := tp2Chargement.nextval;
  9    :new.pSoumission := tp2DemandeSoumission.currval;
 10    SELECT * INTO rpClient FROM
 11  (
 12  SELECT pClient FROM tp1Client
 13  ORDER BY dbms_random.value
 14  )
 15  WHERE rownum = 1;
 16    :new.pClient := rpClient;
 17  END;
 18  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteRoute
  2  BEFORE INSERT ON tp1Route
  3  FOR EACH ROW
  4    WHEN (new.pRoute = 0 AND new.pSoumission = 0 AND new.nDistance = 0)
  5  DECLARE
  6  rnDistance tp1Route.nDistance%TYPE;
  7  BEGIN
  8    :new.pRoute := tp2Route.nextval;
  9    :new.pSoumission := tp2DemandeSoumission.currval;
 10  
 11    SELECT calculDistance (:new.nLatOri,:new.nLongOri,:new.nLatDes,:new.nLongDes) INTO rnDistance FROM DUAL;
 12    :new.nDistance := rnDistance;
 13  END;
 14  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteCarburant
  2  BEFORE INSERT ON tp1Carburant
  3  FOR EACH ROW
  4    WHEN (new.pCarburant = 0)
  5  BEGIN
  6    :new.pCarburant := tp2Carburant.nextval;
  7  END;
  8  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteCompagnie
  2  BEFORE INSERT ON tp1Compagnie
  3  FOR EACH ROW
  4    WHEN (new.pCompagnie = 0)
  5  BEGIN
  6    :new.pCompagnie := tp2Compagnie.nextval;
  7  END;
  8  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteCamion
  2  BEFORE INSERT ON tp1Camion
  3  FOR EACH ROW
  4    WHEN (new.pCamion = 0 AND new.pEquipement = 0 and new.pTracteur = 0)
  5  BEGIN
  6    :new.pCamion := tp2Camion.nextval;
  7    :new.pEquipement := tp2Equipement.currval;
  8    :new.pTracteur := tp2Tracteur.currval;
  9  END;
 10  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteTypeEquipement
  2  BEFORE INSERT ON tp1TypeEquipement
  3  FOR EACH ROW
  4    WHEN (new.pTypeEquipement = 0)
  5  BEGIN
  6    :new.pTypeEquipement := tp2TypeEquipement.nextval;
  7  END;
  8  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteEquipement
  2  BEFORE INSERT ON tp1Equipement
  3  FOR EACH ROW
  4    WHEN (new.pEquipement = 0 AND new.pTypeEquipement = 0)
  5  BEGIN
  6    :new.pEquipement := tp2Equipement.nextval;
  7    :new.pTypeEquipement := tp2TypeEquipement.currval;
  8  END;
  9  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachettePosition
  2  BEFORE INSERT ON tp1Position
  3  FOR EACH ROW
  4    WHEN (new.pPosition = 0 AND new.pCamion = 0)
  5  BEGIN
  6    :new.pPosition := tp2Position.nextval;
  7    :new.pCamion := tp2Camion.currval;
  8  END;
  9  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteTracteur
  2  BEFORE INSERT ON tp1Tracteur
  3  FOR EACH ROW
  4    WHEN (new.pTracteur = 0 AND new.pCarburant = 0)
  5  BEGIN
  6    :new.pTracteur := tp2Tracteur.nextval;
  7    :new.pCarburant := tp2Carburant.currval;
  8  END;
  9  /

Trigger created.

SQL> create OR REPLACE trigger tp2GachetteSoumissionE
  2  BEFORE INSERT ON tp1SoumissionE
  3  FOR EACH ROW
  4    WHEN (new.pSoumissionE = 0 AND new.pChargement = 0)
  5  BEGIN
  6    :new.pSoumissionE := tp2SoumissionE.nextval;
  7    :new.pChargement := tp2Chargement.currval;
  8  
  9  END;
 10  /

Trigger created.

SQL> create OR REPLACE trigger tp2ReduireCamion
  2  BEFORE INSERT ON tp1Route
  3  FOR EACH ROW
  4  DECLARE
  5  rpCompagnie tp1Camion.pCompagnie%TYPE;
  6  rpSoumission tp1DemandeSoumission.pSoumission%TYPE;
  7  BEGIN
  8  rpSoumission := tp2DemandeSoumission.currval;
  9  SELECT tp1Camion.pCompagnie INTO rpCompagnie
 10  FROM tp1DemandeSoumission JOIN tp1Camion
 11  ON tp1DemandeSoumission.pCamion = tp1Camion.pCamion
 12  WHERE tp1DemandeSoumission.pSoumission = rpSoumission;
 13  
 14  
 15  UPDATE tp1Compagnie
 16  	  SET tp1Compagnie.nCamion = tp1Compagnie.nCamion - 1
 17  	  WHERE tp1Compagnie.pCompagnie = rpCompagnie;
 18  
 19  
 20  END;
 21  /

Trigger created.

SQL> create OR REPLACE trigger tp2VerifierSoumission
  2  BEFORE INSERT ON tp1SoumissionE
  3  FOR EACH ROW
  4  DECLARE
  5  rnDistance tp1Route.nDistance%TYPE;
  6  rpRoute tp1DemandeSoumission.pSoumission%TYPE;
  7  BEGIN
  8  rpRoute := tp2Route.currval;
  9  SELECT tp1Route.nDistance INTO rnDistance
 10  FROM tp1Route
 11  WHERE tp1Route.pRoute = rpRoute;
 12  
 13  IF  rnDistance > 50.00
 14  THEN
 15  Raise_Application_Error(-20000, 'Bloquer la réservation dun camion lorsque le trajet est supérieur à 50 km');
 16  ELSIF rnDistance <= 0 THEN
 17  	   raise_application_error(-20001, 'Bloquer la soumission si le trajet na pas été bien identifié');
 18  END IF;
 19  END;
 20  /

Trigger created.

SQL> CREATE OR REPLACE TRIGGER tp2CoutErreur
  2  BEFORE INSERT ON tp1SoumissionE
  3  FOR EACH ROW
  4  DECLARE
  5    rnPrix  tp1DemandeSoumission.nPrix %TYPE;
  6    rnCout  tp1TypeEquipement.nCout %TYPE;
  7    rpSoumissionE  tp1SoumissionE.pSoumissionE %TYPE;
  8  BEGIN
  9  rpSoumissionE := tp2DemandeSoumission.currval;
 10  SELECT tp1DemandeSoumission.nPrix INTO rnPrix
 11  	 FROM tp1DemandeSoumission
 12  	 WHERE tp1DemandeSoumission.pSoumission = rpSoumissionE;
 13  
 14  
 15  SELECT tp1TypeEquipement.nCout INTO rnCout
 16  	 FROM tp1DemandeSoumission JOIN tp1Camion
 17  	 ON tp1DemandeSoumission.pCamion = tp1Camion.pCamion
 18  	 JOIN tp1Equipement
 19  	 ON tp1Camion.pEquipement = tp1Equipement.pEquipement
 20  	 JOIN tp1TypeEquipement
 21  	 ON tp1Equipement.pTypeEquipement = tp1TypeEquipement.pTypeEquipement
 22  	 WHERE tp1DemandeSoumission.pSoumission = rpSoumissionE;
 23  
 24  
 25  IF  (rnPrix = rnCout)
 26  THEN
 27  raise_application_error(-20002, 'Bloquer la soumission si le coût de type déquipement pour un camion ne sont pas différents.');
 28  END IF;
 29  END;
 30   /

Trigger created.

SQL> SET ECHO ON
SQL> -- Script Oracle SQL*plus de l'insertion pour le travail pratique 1 - Modélisation et Conception d'une BD
SQL> -- Version sans accents
SQL> -- INSERTION dans les tables
SQL> SET ECHO ON
SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'VISA')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'Master Card')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'VISA')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'Master Card')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'American Express')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'VISA')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'Master Card')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'Master Card')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'VISA')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'American Express')
  3  /

1 row created.

SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'VISA')
  3  /

1 row created.

SQL> INSERT INTO tp1Compagnie
  2  	     VALUES(0,'Earenam',10,1.18)
  3  /

1 row created.

SQL> INSERT INTO tp1Compagnie
  2  	     VALUES(0,'Arearn',10,1.18)
  3  /

1 row created.

SQL> INSERT INTO tp1Compagnie
  2  	     VALUES(0,'Senoine',10,1.18)
  3  /

1 row created.

SQL> INSERT INTO tp1TypeEquipement
  2  	     VALUES(0,'Flatbed',0.02)
  3  /

1 row created.

SQL> INSERT INTO tp1Equipement
  2  	     VALUES(0,'EarenamFlatbed',8.0,4.8,5.4,208.0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1TypeEquipement
  2  	     VALUES(0,'DryBox',0.05)
  3  /

1 row created.

SQL> INSERT INTO tp1Equipement
  2  	     VALUES(0,'EarenamDryBox',11.7,6.0,5.5,396.0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1TypeEquipement
  2  	     VALUES(0,'Flatbed',0.02)
  3  /

1 row created.

SQL> INSERT INTO tp1Equipement
  2  	     VALUES(0,'ArearnFlatbed',8.0,4.8,5.4,208.0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1TypeEquipement
  2  	     VALUES(0,'DryBox',0.05)
  3  /

1 row created.

SQL> INSERT INTO tp1Equipement
  2  	     VALUES(0,'ArearnDryBox',11.7,6.0,5.5,396.0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1TypeEquipement
  2  	     VALUES(0,'Flatbed',0.02)
  3  /

1 row created.

SQL> INSERT INTO tp1Equipement
  2  	     VALUES(0,'SenoineFlatbed',8.0,4.8,5.4,208.0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1TypeEquipement
  2  	     VALUES(0,'DryBox',0.05)
  3  /

1 row created.

SQL> INSERT INTO tp1Equipement
  2  	     VALUES(0,'SenoineDryBox',11.7,6.0,5.5,396.0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Carburant
  2  	     VALUES(0,'Regulier',1.10)
  3  /

1 row created.

SQL> INSERT INTO tp1Tracteur
  2  	     VALUES(0,'EarenamTracteurReg',20,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Camion
  2  	     VALUES(0,10,0,0,'EarenamCamion')
  3  /

1 row created.

SQL> INSERT INTO tp1Position
  2  	     VALUES(0,'Montreal',43.6532,79.3832,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Tracteur
  2  	     VALUES(0,'ArearnTracteurReg',20,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Camion
  2  	     VALUES(0,12,0,0,'ArearnCamion')
  3  /

1 row created.

SQL> INSERT INTO tp1Position
  2  	     VALUES(0,'Toronto',45.5017,73.5673,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Tracteur
  2  	     VALUES(0,'SenoineTracteurReg',20,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Camion
  2  	     VALUES(0,14,0,0,'SenoineCamion')
  3  /

1 row created.

SQL> INSERT INTO tp1Position
  2  	     VALUES(0,'Calgary',51.0447,114.0719,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Carburant
  2  	     VALUES(0,'Diesel',1.50)
  3  /

1 row created.

SQL> INSERT INTO tp1Tracteur
  2  	     VALUES(0,'EarenamTracteurDies',20,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Camion
  2  	     VALUES(0,10,0,0,'EarenamCamion')
  3  /

1 row created.

SQL> INSERT INTO tp1Position
  2  	     VALUES(0,'Montreal',43.6532,79.3832,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Tracteur
  2  	     VALUES(0,'ArearnTracteurDies',20,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Camion
  2  	     VALUES(0,12,0,0,'ArearnCamion')
  3  /

1 row created.

SQL> INSERT INTO tp1Position
  2  	     VALUES(0,'Toronto',45.5017,73.5673,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Tracteur
  2  	     VALUES(0,'SenoineTracteurDies',20,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Camion
  2  	     VALUES(0,14,0,0,'SenoineCamion')
  3  /

1 row created.

SQL> INSERT INTO tp1Position
  2  	     VALUES(0,'Calgary',51.0447,114.0719,1,0)
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,15.00,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Mississauga',0,0,0,0,6.0,3.0,7.0,20.0,1,1.0,200.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Mississauga',43.6532,79.3832,43.5890,79.6441,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,170.00,0,to_date('2019/10/17', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Calgary-Chestermere',0,1,0,0,7.0,6.0,3.0,30.0,1,1.0,300.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Calgary-Chestermere',51.0486,114.0719,51.0382,113.8425,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/17', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,190.00,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Vancouver-West Vancouver',0,1,0,1,7.0,3.0,6.0,40.0,1,1.0,20.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Vancouver-West Vancouver',49.2827,123.1207,49.3286,123.1602,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,20.00,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Quebec-Levis',0,0,1,1,7.0,6.0,3.0,50.0,1,1.0,500.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Quebec-Levis',46.8139,71.2080,46.7382,71.2465,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,15.00,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Montreal-Brossard',0,0,1,0,6.0,3.0,7.0,20.0,1,1.0,1000.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Montreal-Brossard',45.5017,73.5673,45.4514,73.4619,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,125.00,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Montreal-Laval',1,1,1,0,7.0,6.0,3.0,40.0,1,1.0,5000.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Montreal-Laval',45.501,73.567,45.6066,73.7124,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,160.00,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Edmonton-Summerside',1,1,1,1,3.0,7.0,6.0,50.0,1,1.0,100.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Edmonton-Summerside',53.546,113.493,53.4158,113.4588,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/09/30', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,12.00,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Mississauga-Toronto',0,1,0,1,3.0,6.0,7.0,20.0,1,1.0,400.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Mississauga-Toronto',43.5890,79.6441,43.6532,79.3832,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,30.00,0,to_date('2019/10/15', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Winnipeg-Oakville',0,1,1,0,6.0,3.0,7.0,200.0,1,1.0,500.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Winnipeg-Oakville',49.895,97.138,49.9294,98.0039,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/15', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,5.00,0,to_date('2019/10/12', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Mississauga',1,0,1,0,7.0,6.0,3.0,250.0,1,1.0,600.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Mississauga',43.6532,79.3832,43.5890,79.6441,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/12', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,80.00,0,to_date('2019/10/13', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Etobicoke',0,0,1,0,3.0,7.0,6.0,30.0,1,1.0,800.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Etobicoke',43.6532,79.3832,43.6205,79.5132,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/13', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,145.00,0,to_date('2019/10/10', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Edmonton-Sherwood Park',0,0,0,1,7.0,6.0,3.0,80.0,1,1.0,700.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Edmonton-Sherwood Park',53.546,113.49,53.5412,113.2957,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/10', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,5.00,0,to_date('2019/10/17', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Hamilton-Mississauga',0,0,0,1,6.0,3.0,7.0,90.0,1,1.0,40.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Hamilton-Mississauga',43.2557,79.8711,43.5890,79.6441,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/17', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> SET ECHO ON
SQL> -- Script Oracle SQL*plus de creation du schema travail pratique 1 - Modélisation et Conception d'une BD
SQL> --
SQL> -- Test de la BD
SQL> --
SQL> SET ECHO ON
SQL> 
SQL> --
SQL> -- Test CHECK dans la table tp1Client - CHECK (cClient IN ('VISA','Master Card','American Express'))
SQL> --
SQL> INSERT INTO tp1Client
  2  	     VALUES(0,'AMEX')
  3  /
INSERT INTO tp1Client
*
ERROR at line 1:
ORA-02290: violation de contraintes (GJ391249.SYS_C004403587) de verification 


SQL> --
SQL> -- Test CHECK dans la table tp1Compagnie - CHECK (nCamion>=1)
SQL> --
SQL> INSERT INTO tp1Compagnie
  2  	     VALUES(0,'TestCheck',0,1.18)
  3  /
INSERT INTO tp1Compagnie
*
ERROR at line 1:
ORA-02290: violation de contraintes (GJ391249.SYS_C004403593) de verification 


SQL> --
SQL> -- Test Trigger tp2ReduireCamion
SQL> -- Réduire la quantité des camions que le transporteur possède en fonction de la quantité louée
SQL> SELECT nCamion FROM tp1Compagnie
  2  /

   NCAMION                                                                      
----------                                                                      
         4                                                                      
         9                                                                      
         4                                                                      

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,15.00,0,to_date('2019/12/06', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Mississauga',0,0,0,0,6.0,3.0,7.0,20.0,1,1.0,200.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Mississauga',43.6532,79.3832,43.5890,79.6441,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> SELECT nCamion FROM tp1Compagnie
  2  /

   NCAMION                                                                      
----------                                                                      
         4                                                                      
         8                                                                      
         4                                                                      

SQL> --
SQL> -- Test Trigger tp2VerifierSoumission
SQL> -- Bloquer la réservation dun camion lorsque le trajet est supérieur à 50 km
SQL> -- Bloquer la soumission si le trajet na pas été bien identifié
SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,15.00,0,to_date('2019/12/06', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Montreal',0,0,0,0,6.0,3.0,7.0,20.0,1,1.0,200.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Montreal',43.6532,79.3832,45.5017,73.5673,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20000: Bloquer la r?servation d?un camion lorsque le trajet est sup?rieur ? 
50 km 
ORA-06512: a "GJ391249.TP2VERIFIERSOUMISSION", ligne 12 
ORA-04088: erreur lors d'execution du declencheur 
'GJ391249.TP2VERIFIERSOUMISSION' 


SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,15.00,0,to_date('2019/12/06', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Montreal',0,0,0,0,6.0,3.0,7.0,20.0,1,1.0,200.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Montreal',0,0,0,0,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20001: Bloquer la soumission si le trajet n?a pas ?t? bien identifi? 
ORA-06512: a "GJ391249.TP2VERIFIERSOUMISSION", ligne 14 
ORA-04088: erreur lors d'execution du declencheur 
'GJ391249.TP2VERIFIERSOUMISSION' 


SQL> --
SQL> -- Test Trigger tp2CoutErreur
SQL> -- Bloquer la soumission si le coût de type déquipement pour un camion ne sont pas différents.
SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,0.02,0,to_date('2019/12/06', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Mississauga',0,0,0,0,6.0,3.0,7.0,20.0,1,1.0,200.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Mississauga',43.6532,79.3832,43.5890,79.6441,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1DemandeSoumission
  2  	     VALUES(0,0.05,0,to_date('2019/12/06', 'yyyy/mm/dd'))
  3  /

1 row created.

SQL> INSERT INTO tp1Chargement
  2  	     VALUES(0,'Toronto-Mississauga',0,0,0,0,6.0,3.0,7.0,20.0,1,1.0,200.00,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1Route
  2  	     VALUES(0,'Toronto-Mississauga',43.6532,79.3832,43.5890,79.6441,0,0)
  3  /

1 row created.

SQL> INSERT INTO tp1SoumissionE
  2  	     VALUES(0,0,to_date('2019/10/18', 'yyyy/mm/dd'))
  3  /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> --
SQL> -- Test PROCEDURE ConsulterSoumissions
SQL> --
SQL> EXEC ConsulterSoumissions(14)

PL/SQL procedure successfully completed.

SQL> /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> EXEC ConsulterSoumissions(10)

PL/SQL procedure successfully completed.

SQL> /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> EXEC ConsulterSoumissions(20)

PL/SQL procedure successfully completed.

SQL> /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> --
SQL> -- Test PROCEDURE ProduireFacture
SQL> --
SQL> EXEC ProduireFacture(14)

PL/SQL procedure successfully completed.

SQL> /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> EXEC ProduireFacture(22)

PL/SQL procedure successfully completed.

SQL> /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> EXEC ProduireFacture(18)

PL/SQL procedure successfully completed.

SQL> /
INSERT INTO tp1SoumissionE
*
ERROR at line 1:
ORA-20002: Bloquer la soumission si le co?t de type d??quipement pour un camion 
ne sont pas diff?rents. 
ORA-06512: a "GJ391249.TP2COUTERREUR", ligne 24 
ORA-04088: erreur lors d'execution du declencheur 'GJ391249.TP2COUTERREUR' 


SQL> --
SQL> -- Test FUNCTION  CoutTotalDuTrajet
SQL> --
SQL> SELECT CoutTotalDuTrajet(14,43.6532,79.3832,43.5890,79.6441) FROM DUAL
  2  /

COUTTOTALDUTRAJET(14,43.6532,79.3832,43.5890,79.6441)                           
-----------------------------------------------------                           
                                                   25                           

SQL> --
SQL> -- Test FUNCTION  TotalFacture
SQL> --
SQL> SELECT TotalFacture(14) FROM DUAL
  2  /

TOTALFACTURE(14)                                                                
----------------                                                                
             109                                                                

SQL> SELECT TotalFacture(10) FROM DUAL
  2  /

TOTALFACTURE(10)                                                                
----------------                                                                
             415                                                                

SQL> SELECT TotalFacture(12) FROM DUAL
  2  /

TOTALFACTURE(12)                                                                
----------------                                                                
             301                                                                

SQL> --
SQL> -- Test FUNCTION  PlusLongTrajet
SQL> --
SQL> SELECT PlusLongTrajet('19-09-30') FROM DUAL
  2  /

PLUSLONGTRAJET('19-09-30')                                                      
--------------------------------------------------------------------------------
 La distance: 3,64041784542690010971958111017122773111 et le camion: 18         

SQL> SELECT PlusLongTrajet('19-10-17') FROM DUAL
  2  /

PLUSLONGTRAJET('19-10-17')                                                      
--------------------------------------------------------------------------------
 La distance: 10,00198100677150552963072793298135110511 et le camion: 20        

SQL> SELECT PlusLongTrajet('19-10-18') FROM DUAL
  2  /

PLUSLONGTRAJET('19-10-18')                                                      
--------------------------------------------------------------------------------
 La distance: 13,79773215166840587265017623909278134989 et le camion: 20        

SQL> COMMIT
  2  /

Commit complete.

SQL> SPOOL off
